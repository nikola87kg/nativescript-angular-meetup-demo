"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var JobsComponent = /** @class */ (function () {
    function JobsComponent() {
        this.myItems = [
            { id: 1, name: "Frontend Developer", city: "Beograd" },
            { id: 2, name: "Senior PHP Developer", city: "Beograd" },
            { id: 3, name: "PHP Developer", city: "Beograd" },
            { id: 4, name: "Ruby on Rails Developer", city: "Beograd" },
            { id: 5, name: "Clojure Developer", city: "Svi gradovi" },
            { id: 6, name: "Crypto Project Community Manager", city: "Svi gradovi" },
            { id: 7, name: "NodeJS Developer", city: "Svi gradovi" },
            { id: 8, name: "Python Developer", city: "Svi gradovi" },
            { id: 9, name: ".NET Deveoper", city: "Svi gradovi" },
            { id: 10, name: "Java Developer", city: "Svi gradovi" },
            { id: 11, name: "Java QA", city: "Svi gradovi" },
            { id: 12, name: "DevOps Engineer", city: "Svi gradovi" },
            { id: 13, name: "Blockchain Developer", city: "Svi gradovi" },
            { id: 14, name: "Frontend Developer", city: "Kragujevac" },
            { id: 15, name: "PHP Developer", city: "Kragujevac" },
            { id: 16, name: "PHP Developer", city: "Niš" },
            { id: 17, name: "Frontend Developer", city: "Niš" }
        ];
    }
    JobsComponent.prototype.onItemTap = function (args) {
        console.log("Go to link" + args.index);
    };
    JobsComponent = __decorate([
        core_1.Component({
            selector: "Jobs",
            moduleId: module.id,
            templateUrl: "./jobs.component.html",
            styleUrls: ["./jobs.component.scss"],
            changeDetection: core_1.ChangeDetectionStrategy.OnPush
        }),
        __metadata("design:paramtypes", [])
    ], JobsComponent);
    return JobsComponent;
}());
exports.JobsComponent = JobsComponent;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiam9icy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJqb2JzLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHNDQUEwRTtBQVUxRTtJQUlJO1FBQ0ksSUFBSSxDQUFDLE9BQU8sR0FBRztZQUNYLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsb0JBQW9CLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRTtZQUN0RCxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsSUFBSSxFQUFFLHNCQUFzQixFQUFFLElBQUksRUFBRSxTQUFTLEVBQUU7WUFDeEQsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxlQUFlLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRTtZQUNqRCxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsSUFBSSxFQUFFLHlCQUF5QixFQUFFLElBQUksRUFBRSxTQUFTLEVBQUU7WUFDM0QsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxtQkFBbUIsRUFBRSxJQUFJLEVBQUUsYUFBYSxFQUFFO1lBQ3pELEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsa0NBQWtDLEVBQUUsSUFBSSxFQUFFLGFBQWEsRUFBRTtZQUN4RSxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsSUFBSSxFQUFFLGtCQUFrQixFQUFFLElBQUksRUFBRSxhQUFhLEVBQUU7WUFDeEQsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxrQkFBa0IsRUFBRSxJQUFJLEVBQUUsYUFBYSxFQUFFO1lBQ3hELEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsZUFBZSxFQUFFLElBQUksRUFBRSxhQUFhLEVBQUU7WUFDckQsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxnQkFBZ0IsRUFBRSxJQUFJLEVBQUUsYUFBYSxFQUFFO1lBQ3ZELEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxhQUFhLEVBQUU7WUFDaEQsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxpQkFBaUIsRUFBRSxJQUFJLEVBQUUsYUFBYSxFQUFFO1lBQ3hELEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsc0JBQXNCLEVBQUUsSUFBSSxFQUFFLGFBQWEsRUFBRTtZQUM3RCxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLG9CQUFvQixFQUFFLElBQUksRUFBRSxZQUFZLEVBQUU7WUFDMUQsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxlQUFlLEVBQUUsSUFBSSxFQUFFLFlBQVksRUFBRTtZQUNyRCxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLGVBQWUsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFO1lBQzlDLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsb0JBQW9CLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRTtTQUN0RCxDQUFDO0lBQ04sQ0FBQztJQUVELGlDQUFTLEdBQVQsVUFBVSxJQUFJO1FBQ1YsT0FBTyxDQUFDLEdBQUcsQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzNDLENBQUM7SUE1QlEsYUFBYTtRQVB6QixnQkFBUyxDQUFDO1lBQ1AsUUFBUSxFQUFFLE1BQU07WUFDaEIsUUFBUSxFQUFFLE1BQU0sQ0FBQyxFQUFFO1lBQ25CLFdBQVcsRUFBRSx1QkFBdUI7WUFDcEMsU0FBUyxFQUFFLENBQUMsdUJBQXVCLENBQUM7WUFDcEMsZUFBZSxFQUFFLDhCQUF1QixDQUFDLE1BQU07U0FDbEQsQ0FBQzs7T0FDVyxhQUFhLENBNkJ6QjtJQUFELG9CQUFDO0NBQUEsQUE3QkQsSUE2QkM7QUE3Qlksc0NBQWEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XHJcbmltcG9ydCB7IERhdGFJdGVtIH0gZnJvbSBcIi4vam9icy5tb2RlbFwiO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgICBzZWxlY3RvcjogXCJKb2JzXCIsXHJcbiAgICBtb2R1bGVJZDogbW9kdWxlLmlkLFxyXG4gICAgdGVtcGxhdGVVcmw6IFwiLi9qb2JzLmNvbXBvbmVudC5odG1sXCIsXHJcbiAgICBzdHlsZVVybHM6IFtcIi4vam9icy5jb21wb25lbnQuc2Nzc1wiXSxcclxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBKb2JzQ29tcG9uZW50ICB7XHJcbiAgICBteUl0ZW1zOiBBcnJheTxEYXRhSXRlbT47XHJcbiAgICBwcml2YXRlIGNvdW50ZXI6IG51bWJlcjtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICB0aGlzLm15SXRlbXMgPSBbXHJcbiAgICAgICAgICAgIHsgaWQ6IDEsIG5hbWU6IFwiRnJvbnRlbmQgRGV2ZWxvcGVyXCIsIGNpdHk6IFwiQmVvZ3JhZFwiIH0sXHJcbiAgICAgICAgICAgIHsgaWQ6IDIsIG5hbWU6IFwiU2VuaW9yIFBIUCBEZXZlbG9wZXJcIiwgY2l0eTogXCJCZW9ncmFkXCIgfSxcclxuICAgICAgICAgICAgeyBpZDogMywgbmFtZTogXCJQSFAgRGV2ZWxvcGVyXCIsIGNpdHk6IFwiQmVvZ3JhZFwiIH0sXHJcbiAgICAgICAgICAgIHsgaWQ6IDQsIG5hbWU6IFwiUnVieSBvbiBSYWlscyBEZXZlbG9wZXJcIiwgY2l0eTogXCJCZW9ncmFkXCIgfSxcclxuICAgICAgICAgICAgeyBpZDogNSwgbmFtZTogXCJDbG9qdXJlIERldmVsb3BlclwiLCBjaXR5OiBcIlN2aSBncmFkb3ZpXCIgfSxcclxuICAgICAgICAgICAgeyBpZDogNiwgbmFtZTogXCJDcnlwdG8gUHJvamVjdCBDb21tdW5pdHkgTWFuYWdlclwiLCBjaXR5OiBcIlN2aSBncmFkb3ZpXCIgfSxcclxuICAgICAgICAgICAgeyBpZDogNywgbmFtZTogXCJOb2RlSlMgRGV2ZWxvcGVyXCIsIGNpdHk6IFwiU3ZpIGdyYWRvdmlcIiB9LFxyXG4gICAgICAgICAgICB7IGlkOiA4LCBuYW1lOiBcIlB5dGhvbiBEZXZlbG9wZXJcIiwgY2l0eTogXCJTdmkgZ3JhZG92aVwiIH0sXHJcbiAgICAgICAgICAgIHsgaWQ6IDksIG5hbWU6IFwiLk5FVCBEZXZlb3BlclwiLCBjaXR5OiBcIlN2aSBncmFkb3ZpXCIgfSxcclxuICAgICAgICAgICAgeyBpZDogMTAsIG5hbWU6IFwiSmF2YSBEZXZlbG9wZXJcIiwgY2l0eTogXCJTdmkgZ3JhZG92aVwiIH0sXHJcbiAgICAgICAgICAgIHsgaWQ6IDExLCBuYW1lOiBcIkphdmEgUUFcIiwgY2l0eTogXCJTdmkgZ3JhZG92aVwiIH0sXHJcbiAgICAgICAgICAgIHsgaWQ6IDEyLCBuYW1lOiBcIkRldk9wcyBFbmdpbmVlclwiLCBjaXR5OiBcIlN2aSBncmFkb3ZpXCIgfSxcclxuICAgICAgICAgICAgeyBpZDogMTMsIG5hbWU6IFwiQmxvY2tjaGFpbiBEZXZlbG9wZXJcIiwgY2l0eTogXCJTdmkgZ3JhZG92aVwiIH0sXHJcbiAgICAgICAgICAgIHsgaWQ6IDE0LCBuYW1lOiBcIkZyb250ZW5kIERldmVsb3BlclwiLCBjaXR5OiBcIktyYWd1amV2YWNcIiB9LFxyXG4gICAgICAgICAgICB7IGlkOiAxNSwgbmFtZTogXCJQSFAgRGV2ZWxvcGVyXCIsIGNpdHk6IFwiS3JhZ3VqZXZhY1wiIH0sXHJcbiAgICAgICAgICAgIHsgaWQ6IDE2LCBuYW1lOiBcIlBIUCBEZXZlbG9wZXJcIiwgY2l0eTogXCJOacWhXCIgfSxcclxuICAgICAgICAgICAgeyBpZDogMTcsIG5hbWU6IFwiRnJvbnRlbmQgRGV2ZWxvcGVyXCIsIGNpdHk6IFwiTmnFoVwiIH1cclxuICAgICAgICBdO1xyXG4gICAgfVxyXG5cclxuICAgIG9uSXRlbVRhcChhcmdzKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCJHbyB0byBsaW5rXCIgKyBhcmdzLmluZGV4KTtcclxuICAgIH1cclxufVxyXG4iXX0=